// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace KiotaPosts.Client.Api.Imss.Grupo.LocalizarNss
{
    #pragma warning disable CS1591
    public class LocalizarNssPostResponse_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Datos adicionales, puede estar vacío</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Arco { get; set; }
#nullable restore
#else
        public string Arco { get; set; }
#endif
        /// <summary>Clave Única de Registro de Población del solicitante</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CveCurp { get; set; }
#nullable restore
#else
        public string CveCurp { get; set; }
#endif
        /// <summary>Correo electrónico del solicitante</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DesEmail { get; set; }
#nullable restore
#else
        public string DesEmail { get; set; }
#endif
        /// <summary>Fecha de alta del solicitante en formato YYYY-MM-DD</summary>
        public Date? FecAlta { get; set; }
        /// <summary>Fecha de baja del solicitante en formato YYYY-MM-DD, puede estar vacío si no hay fecha de baja</summary>
        public Date? FecBaja { get; set; }
        /// <summary>Fecha de nacimiento del solicitante en formato YYYY-MM-DD</summary>
        public Date? FecNacimiento { get; set; }
        /// <summary>Nombre del solicitante</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NomNombre { get; set; }
#nullable restore
#else
        public string NomNombre { get; set; }
#endif
        /// <summary>Número de Seguro Social del solicitante</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NumNss { get; set; }
#nullable restore
#else
        public string NumNss { get; set; }
#endif
        /// <summary>Apellido materno del solicitante</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RefApellidoMaterno { get; set; }
#nullable restore
#else
        public string RefApellidoMaterno { get; set; }
#endif
        /// <summary>Apellido paterno del solicitante</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RefApellidoPaterno { get; set; }
#nullable restore
#else
        public string RefApellidoPaterno { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.Api.Imss.Grupo.LocalizarNss.LocalizarNssPostResponse_data"/> and sets the default values.
        /// </summary>
        public LocalizarNssPostResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Api.Imss.Grupo.LocalizarNss.LocalizarNssPostResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static KiotaPosts.Client.Api.Imss.Grupo.LocalizarNss.LocalizarNssPostResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new KiotaPosts.Client.Api.Imss.Grupo.LocalizarNss.LocalizarNssPostResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "arco", n => { Arco = n.GetStringValue(); } },
                { "cveCurp", n => { CveCurp = n.GetStringValue(); } },
                { "desEmail", n => { DesEmail = n.GetStringValue(); } },
                { "fecAlta", n => { FecAlta = n.GetDateValue(); } },
                { "fecBaja", n => { FecBaja = n.GetDateValue(); } },
                { "fecNacimiento", n => { FecNacimiento = n.GetDateValue(); } },
                { "nomNombre", n => { NomNombre = n.GetStringValue(); } },
                { "numNss", n => { NumNss = n.GetStringValue(); } },
                { "refApellidoMaterno", n => { RefApellidoMaterno = n.GetStringValue(); } },
                { "refApellidoPaterno", n => { RefApellidoPaterno = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("arco", Arco);
            writer.WriteStringValue("cveCurp", CveCurp);
            writer.WriteStringValue("desEmail", DesEmail);
            writer.WriteDateValue("fecAlta", FecAlta);
            writer.WriteDateValue("fecBaja", FecBaja);
            writer.WriteDateValue("fecNacimiento", FecNacimiento);
            writer.WriteStringValue("nomNombre", NomNombre);
            writer.WriteStringValue("numNss", NumNss);
            writer.WriteStringValue("refApellidoMaterno", RefApellidoMaterno);
            writer.WriteStringValue("refApellidoPaterno", RefApellidoPaterno);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
