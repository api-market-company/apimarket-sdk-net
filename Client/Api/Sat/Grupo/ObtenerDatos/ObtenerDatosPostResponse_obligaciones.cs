// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace KiotaPosts.Client.Api.Sat.Grupo.ObtenerDatos
{
    #pragma warning disable CS1591
    public class ObtenerDatosPostResponse_obligaciones : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cobligacion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cobligacion { get; set; }
#nullable restore
#else
        public string Cobligacion { get; set; }
#endif
        /// <summary>The cvePago property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CvePago { get; set; }
#nullable restore
#else
        public string CvePago { get; set; }
#endif
        /// <summary>The dobligacion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Dobligacion { get; set; }
#nullable restore
#else
        public string Dobligacion { get; set; }
#endif
        /// <summary>The dobligLc property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DobligLc { get; set; }
#nullable restore
#else
        public string DobligLc { get; set; }
#endif
        /// <summary>The faltaOblig property</summary>
        public Date? FaltaOblig { get; set; }
        /// <summary>The fbajaOblig property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FbajaOblig { get; set; }
#nullable restore
#else
        public string FbajaOblig { get; set; }
#endif
        /// <summary>The fefecAOblig property</summary>
        public Date? FefecAOblig { get; set; }
        /// <summary>The fefecBOblig property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FefecBOblig { get; set; }
#nullable restore
#else
        public string FefecBOblig { get; set; }
#endif
        /// <summary>The ffinLegal property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FfinLegal { get; set; }
#nullable restore
#else
        public string FfinLegal { get; set; }
#endif
        /// <summary>The finiLegal property</summary>
        public Date? FiniLegal { get; set; }
        /// <summary>The tcontribucion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Tcontribucion { get; set; }
#nullable restore
#else
        public string Tcontribucion { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.Api.Sat.Grupo.ObtenerDatos.ObtenerDatosPostResponse_obligaciones"/> and sets the default values.
        /// </summary>
        public ObtenerDatosPostResponse_obligaciones()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Api.Sat.Grupo.ObtenerDatos.ObtenerDatosPostResponse_obligaciones"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static KiotaPosts.Client.Api.Sat.Grupo.ObtenerDatos.ObtenerDatosPostResponse_obligaciones CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new KiotaPosts.Client.Api.Sat.Grupo.ObtenerDatos.ObtenerDatosPostResponse_obligaciones();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cobligacion", n => { Cobligacion = n.GetStringValue(); } },
                { "cvePago", n => { CvePago = n.GetStringValue(); } },
                { "dobligLc", n => { DobligLc = n.GetStringValue(); } },
                { "dobligacion", n => { Dobligacion = n.GetStringValue(); } },
                { "faltaOblig", n => { FaltaOblig = n.GetDateValue(); } },
                { "fbajaOblig", n => { FbajaOblig = n.GetStringValue(); } },
                { "fefecAOblig", n => { FefecAOblig = n.GetDateValue(); } },
                { "fefecBOblig", n => { FefecBOblig = n.GetStringValue(); } },
                { "ffinLegal", n => { FfinLegal = n.GetStringValue(); } },
                { "finiLegal", n => { FiniLegal = n.GetDateValue(); } },
                { "tcontribucion", n => { Tcontribucion = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cobligacion", Cobligacion);
            writer.WriteStringValue("cvePago", CvePago);
            writer.WriteStringValue("dobligacion", Dobligacion);
            writer.WriteStringValue("dobligLc", DobligLc);
            writer.WriteDateValue("faltaOblig", FaltaOblig);
            writer.WriteStringValue("fbajaOblig", FbajaOblig);
            writer.WriteDateValue("fefecAOblig", FefecAOblig);
            writer.WriteStringValue("fefecBOblig", FefecBOblig);
            writer.WriteStringValue("ffinLegal", FfinLegal);
            writer.WriteDateValue("finiLegal", FiniLegal);
            writer.WriteStringValue("tcontribucion", Tcontribucion);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
