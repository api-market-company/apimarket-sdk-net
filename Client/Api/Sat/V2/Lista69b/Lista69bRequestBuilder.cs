// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace KiotaPosts.Client.Api.Sat.V2.Lista69b
{
    /// <summary>
    /// Builds and executes requests for operations under \api\sat\v2\lista69b
    /// </summary>
    public class Lista69bRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Lista69bRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/sat/v2/lista69b{?contribuyente*,rfc*,select*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Lista69bRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/sat/v2/lista69b{?contribuyente*,rfc*,select*}", rawUrl)
        {
        }
        /// <summary>
        /// Consulta la lista 69B del SAT (Lista negra) con distintos filtros horizontales y verticales.
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bPostResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b400Error">When receiving a 400 status code</exception>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b401Error">When receiving a 401 status code</exception>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b4XXError">When receiving a 4XX status code</exception>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b5XXError">When receiving a 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bPostResponse?> PostAsLista69bPostResponseAsync(Action<RequestConfiguration<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder.Lista69bRequestBuilderPostQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bPostResponse> PostAsLista69bPostResponseAsync(Action<RequestConfiguration<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder.Lista69bRequestBuilderPostQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToPostRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b400Error.CreateFromDiscriminatorValue },
                { "401", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b401Error.CreateFromDiscriminatorValue },
                { "4XX", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b4XXError.CreateFromDiscriminatorValue },
                { "5XX", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b5XXError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bPostResponse>(requestInfo, KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bPostResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Consulta la lista 69B del SAT (Lista negra) con distintos filtros horizontales y verticales.
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b400Error">When receiving a 400 status code</exception>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b401Error">When receiving a 401 status code</exception>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b4XXError">When receiving a 4XX status code</exception>
        /// <exception cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b5XXError">When receiving a 5XX status code</exception>
        [Obsolete("This method is obsolete. Use PostAsLista69bPostResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bResponse?> PostAsync(Action<RequestConfiguration<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder.Lista69bRequestBuilderPostQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bResponse> PostAsync(Action<RequestConfiguration<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder.Lista69bRequestBuilderPostQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToPostRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b400Error.CreateFromDiscriminatorValue },
                { "401", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b401Error.CreateFromDiscriminatorValue },
                { "4XX", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b4XXError.CreateFromDiscriminatorValue },
                { "5XX", KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69b5XXError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bResponse>(requestInfo, KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Consulta la lista 69B del SAT (Lista negra) con distintos filtros horizontales y verticales.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(Action<RequestConfiguration<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder.Lista69bRequestBuilderPostQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(Action<RequestConfiguration<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder.Lista69bRequestBuilderPostQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder WithUrl(string rawUrl)
        {
            return new KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Consulta la lista 69B del SAT (Lista negra) con distintos filtros horizontales y verticales.
        /// </summary>
        public class Lista69bRequestBuilderPostQueryParameters 
        {
            /// <summary>Con wfts buscas con un lenguaje cercano al natural. </summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("contribuyente")]
            public string? Contribuyente { get; set; }
#nullable restore
#else
            [QueryParameter("contribuyente")]
            public string Contribuyente { get; set; }
#endif
            /// <summary>Con match buscas con un expresi√≥n regular POSIX.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("rfc")]
            public string? Rfc { get; set; }
#nullable restore
#else
            [QueryParameter("rfc")]
            public string Rfc { get; set; }
#endif
            /// <summary>Campos que quieres mostrar. Recuerda que menor cantidad de campos, menor es el tiempo de espera.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("select")]
            public string? Select { get; set; }
#nullable restore
#else
            [QueryParameter("select")]
            public string Select { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class Lista69bRequestBuilderPostRequestConfiguration : RequestConfiguration<KiotaPosts.Client.Api.Sat.V2.Lista69b.Lista69bRequestBuilder.Lista69bRequestBuilderPostQueryParameters>
        {
        }
    }
}
